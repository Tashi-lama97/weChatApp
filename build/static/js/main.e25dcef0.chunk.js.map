{"version":3,"sources":["reportWebVitals.js","components/url.js","components/auth/helper/apicalls.js","components/auth/helper/ProtectedRoutes.js","components/chat/images/account.png","components/chat/helper/socket.js","components/chat/ChatHistory.js","components/chat/helper/apicalls.js","components/chat/Contacts.js","components/chat/AddContact.js","components/chat/SelectSection.js","components/chat/TopBar.js","components/chat/Messages.js","components/chat/Base.js","components/auth/Login.js","components/auth/Signup.js","components/entryPage/Main.js","Router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","URL","isAuthenticated","window","localStorage","getItem","JSON","parse","ProtectedRoute","Component","component","rest","render","props","to","pathname","state","from","location","socket","io","SocketContext","React","createContext","ChatHistory","setMessgeInfo","useContext","token","user","useState","lastChatId","setLastChatId","chatHistory","setChatHistory","forceUpdate","setValue","value","useForceUpdate","historyLoading","historySuccess","historyError","historyIndicators","setHistoryIndicators","onClickHandler","chat","reciverId","reciver","_id","sender","reciverName","senderInfo","name","reciverInfo","emit","chatId","error","NotificationManager","chat_id","userId","axios","get","headers","Authorization","response","data","catch","readMessage","console","log","index","findIndex","d","unread","useEffect","getChatHistory","on","chatUpdate","cloneDeep","message","date","Date","toISOString","sort","a","b","className","style","maxHeight","length","map","onClick","src","USERPIC","alt","Contacts","changeSection","section","contacts","setContacts","contactId","setContactId","success","loading","indicators","setIndicators","contact","getChatId","contactDetails","Id","uuidv4","getContactList","memo","AddContact","searchVal","setSearchVal","searchResult","setSearchResult","nloading","nsuccess","nerror","newIndicators","setNewIndicators","trim","email","post","searchForContact","addContactToList","addToContact","onChange","e","target","type","placeholder","Object","keys","user_name","user_id","SelectSection","TopBar","Messages","messages","messagesData","setMessagesData","Base","history","chatView","setChatView","setSection","setMessages","chatData","setChatData","setLoading","messageData","setMessageData","getAllMessages","Provider","confirm","next","removeItem","err","tryLogOut","push","sectionName","getLeftSideView","preventDefault","Login","password","setUser","changeHandler","field","warning","tryLogIn","errors","msg","setItem","stringify","authenticate","Signup","trySignUp","Main","Router","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e25dcef0.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const URL = \" https://tashi-chat-app.herokuapp.com\";\n","import axios from \"axios\";\nimport { URL } from \"../../url\";\n\n//Sign Up\nexport const trySignUp = (user) => {\n  return axios\n    .post(`${URL}/api/signup`, user)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\n//Login\nexport const tryLogIn = (user) => {\n  return axios\n    .post(`${URL}/api/login`, user)\n    .then((response) => {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\n//Setting up jwt in localstorage\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\n\n//To authenticate user\nexport const isAuthenticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\n\n//logout\nexport const tryLogOut = (next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n    return axios\n      .get(\"/api/logout\")\n      .then((response) => console.log(\"signout success\"))\n      .catch((err) => console.log(err));\n  }\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./apicalls\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuthenticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/account.533353e5.png\";","import React from \"react\";\nimport io from \"socket.io-client\";\nconst BASE_URL = \"https://tashi-chat-app.herokuapp.com/\";\n\nexport const socket = io(BASE_URL);\nexport const SocketContext = React.createContext();\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { isAuthenticated } from \"../auth/helper/apicalls\";\nimport SimpleBar from \"simplebar-react\";\nimport USERPIC from \"./images/account.png\";\nimport { getChatHistory, readMessage } from \"./helper/apicalls\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport { SocketContext } from \"./helper/socket\";\nimport { cloneDeep } from \"lodash\";\n\nfunction useForceUpdate() {\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue((value) => value + 1); // update the state to force render\n}\n\nconst ChatHistory = ({ setMessgeInfo }) => {\n  const socket = useContext(SocketContext);\n  const { token, user } = isAuthenticated();\n  const [lastChatId, setLastChatId] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const forceUpdate = useForceUpdate();\n\n  const [historyIndicators, setHistoryIndicators] = useState({\n    historyLoading: \"\",\n    historySuccess: \"\",\n    historyError: \"\",\n  });\n\n  const { historyLoading, historySuccess, historyError } = historyIndicators;\n\n  const onClickHandler = (chat) => {\n    //Reciver Info\n    const reciverId = chat.reciver == user._id ? chat.sender : chat.reciver;\n    const reciverName =\n      chat.reciver == user._id\n        ? chat.senderInfo[0].name\n        : chat.reciverInfo[0].name;\n\n    //Chat Leaving\n    if (lastChatId) {\n      socket.emit(\"leaveChat\", { chatId: lastChatId }, (error) => {\n        if (error) {\n          NotificationManager.error(error, \"Error\", 10000);\n        }\n      });\n    }\n    //Chat Joining\n    socket.emit(\n      \"join\",\n      {\n        chat_id: chat._id.chatId,\n      },\n      (error) => {\n        if (error) {\n          NotificationManager.error(error, \"Error\", 10000);\n        }\n      }\n    );\n\n    readMessage(token, chat._id.chatId, user._id).then((data) => {\n      if (data.error) {\n        console.log(\"error reading message\");\n      }\n    });\n\n    //read Chat locally\n    let data = chatHistory;\n    let index = data.findIndex((d) => d._id.chatId === chat._id.chatId);\n    if (data[index]) {\n      data[index].unread = false;\n      setChatHistory(data);\n      forceUpdate();\n    }\n\n    //setting up states\n    setLastChatId(chat._id.chatId);\n    setMessgeInfo(reciverId, reciverName, chat._id.chatId);\n  };\n\n  useEffect(() => {\n    setHistoryIndicators({\n      ...historyIndicators,\n      historyLoading: true,\n      historySuccess: \"\",\n      historyError: \"\",\n    });\n    getChatHistory(token, user._id).then((data) => {\n      if (data.error) {\n        setHistoryIndicators({\n          ...historyIndicators,\n          historyLoading: false,\n          historySuccess: false,\n          historyError: data.error,\n        });\n        NotificationManager.error(data.error, \"Error\", 10000);\n      } else {\n        setHistoryIndicators({\n          ...historyIndicators,\n          historyLoading: false,\n          historySuccess: true,\n          historyError: false,\n        });\n\n        setChatHistory(data);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.on(\"updateChatHistory\", (chatUpdate) => {\n      let data = cloneDeep(chatHistory);\n\n      let index = data.findIndex((d) => d._id.chatId === chatUpdate.chatId);\n      if (data[index]) {\n        data[index].message = chatUpdate.message;\n        data[index].date = new Date().toISOString();\n        data[index].unread = true;\n\n        data[index].reciverInfo =\n          chatHistory[index].reciver === chatUpdate.reciver\n            ? chatHistory[index].reciverInfo\n            : chatHistory[index].senderInfo;\n\n        data[index].senderInfo =\n          chatHistory[index].sender === chatUpdate.sender\n            ? chatHistory[index].senderInfo\n            : chatHistory[index].reciverInfo;\n\n        data[index].reciver = chatUpdate.reciver;\n        data[index].sender = chatUpdate.sender;\n\n        data.sort((a, b) => new Date(b.date) - new Date(a.date));\n        setChatHistory(data);\n        forceUpdate();\n      }\n    });\n  }, [chatHistory]);\n\n  return (\n    <>\n      <div className=\"title flex bg-gray-100 flex-col\">\n        <h3 className=\"titleText\">Recent</h3>\n        <h3 className=\"titleText\">Chats</h3>\n      </div>\n      <div className=\"chatHistoryWrapper \">\n        <SimpleBar style={{ maxHeight: 420 }}>\n          {historyLoading ? (\n            <div className=\"chatHistoryMessageWrapper animate-pulse\">\n              <div className=\"userIcon\">\n                <div className=\"rounded-full bg-blue-400 h-12 w-12\"></div>\n              </div>\n              <div className=\"userData space-y-2\">\n                <div className=\"h-4 bg-blue-400 rounded\"></div>\n                <div className=\"h-4 bg-blue-400 rounded w-5/6\"></div>\n              </div>\n            </div>\n          ) : chatHistory.length !== 0 && typeof chatHistory == \"object\" ? (\n            chatHistory.map((chat, index) => {\n              return (\n                <div\n                  onClick={() => {\n                    onClickHandler(chat);\n                  }}\n                  className={\n                    chat.sender !== user._id && chat.unread === true\n                      ? \"chatHistoryMessageWrapper unReadChat\"\n                      : \"chatHistoryMessageWrapper \"\n                  }\n                  key={chat._id.chatId}\n                >\n                  <div className=\"userIcon\">\n                    <img src={USERPIC} alt=\"demoPic\" className=\"userPic\" />\n                  </div>\n                  <div className=\"userData\">\n                    <h3 className=\"chatName\">\n                      {chat.reciver == user._id\n                        ? chat.senderInfo[0].name\n                        : chat.reciverInfo[0].name}\n                    </h3>\n                    <h6 className=\"chatLastMessage\">{chat.message}</h6>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div className=\"chatHistoryMessageWrapper\">\n              <h3>No chats</h3>\n            </div>\n          )}\n        </SimpleBar>\n      </div>\n      <NotificationContainer />\n    </>\n  );\n};\n\nexport default ChatHistory;\n","import axios from \"axios\";\nimport { URL } from \"../../url\";\n\nexport const getChatHistory = (token, userId) => {\n  return axios\n    .get(`${URL}/api/chat/history/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\nexport const getContactList = (token, userId) => {\n  return axios\n    .get(`${URL}/api/get/all/contacts/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\nexport const searchForContact = (token, userId, email) => {\n  return axios\n    .post(\n      `${URL}/api/search/user/${userId}`,\n      { email },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    )\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\nexport const addToContact = (token, userId, contactId) => {\n  return axios\n    .post(\n      `${URL}/api/contact/add/${userId}`,\n      { contactId },\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    )\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\nexport const getAllMessages = (token, chatId, userId) => {\n  return axios\n    .get(`${URL}/api/chat/all/${chatId}/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\nexport const getChatId = (token, userId, reciver) => {\n  return axios\n    .get(`${URL}/api/chat/getChatId/${userId}/${reciver}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n\nexport const readMessage = (token, chatId, userId) => {\n  return axios\n    .get(`${URL}/api/chat/read/${userId}/${chatId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .then((response) => {\n      return response.data;\n    })\n    .catch((error) => {\n      return error.response.data;\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { isAuthenticated } from \"../auth/helper/apicalls\";\nimport SimpleBar from \"simplebar-react\";\nimport USERPIC from \"./images/account.png\";\nimport { getChatId, getContactList } from \"./helper/apicalls\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Contacts = ({ changeSection, section, setMessgeInfo }) => {\n  const { token, user } = isAuthenticated();\n  const [contacts, setContacts] = useState([]);\n  const [contactId, setContactId] = useState(\"\");\n  const [indicators, setIndicators] = useState({\n    success: \"\",\n    loading: \"\",\n    error: \"\",\n  });\n\n  const { loading, success, error } = indicators;\n\n  const onClickHandler = (contact) => {\n    getChatId(token, user._id, contact.contactDetails[0]._id).then((data) => {\n      if (data) {\n        if (data.error) {\n          console.log(error);\n        } else if (data) {\n          setMessgeInfo(\n            contact.contactDetails[0]._id,\n            contact.contactDetails[0].name,\n            data.chatId\n          );\n        }\n      } else {\n        const Id = uuidv4();\n        setMessgeInfo(\n          contact.contactDetails[0]._id,\n          contact.contactDetails[0].name,\n          Id\n        );\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIndicators({ ...indicators, loading: true, success: \"\", error: \"\" });\n    getContactList(token, user._id).then((data) => {\n      if (data.error) {\n        setIndicators({\n          ...indicators,\n          loading: false,\n          success: \"\",\n          error: data.error,\n        });\n        NotificationManager.error(data.error, \"Error\", 10000);\n      } else {\n        setIndicators({\n          ...indicators,\n          loading: false,\n          success: true,\n          error: \"\",\n        });\n        setContacts(data);\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"title flex bg-gray-100 flex-col\">\n        <h3 className=\"titleText contactTitle\">Contacts</h3>\n      </div>\n      <div className=\"chatHistoryWrapper \">\n        <SimpleBar style={{ maxHeight: 420 }}>\n          {loading ? (\n            <div className=\"chatHistoryMessageWrapper animate-pulse\">\n              <div className=\"userIcon\">\n                <div className=\"rounded-full bg-blue-400 h-12 w-12\"></div>\n              </div>\n              <div className=\"userData space-y-2\">\n                <div className=\"h-4 bg-blue-400 rounded\"></div>\n                <div className=\"h-4 bg-blue-400 rounded w-5/6\"></div>\n              </div>\n            </div>\n          ) : contacts.length !== 0 && typeof contacts == \"object\" ? (\n            contacts.map((contact, index) => {\n              return (\n                <div\n                  onClick={() => {\n                    if (contact.contactDetails[0]._id !== contactId) {\n                      setContactId(contact.contactDetails[0]._id);\n                      onClickHandler(contact);\n                    }\n                  }}\n                  className=\"chatHistoryMessageWrapper\"\n                  key={contact.contactDetails[0]._id}\n                >\n                  <div className=\"userIcon\">\n                    <img src={USERPIC} alt=\"demoPic\" className=\"userPic\" />\n                  </div>\n                  <div className=\"userData\">\n                    <h3 className=\"chatName\">\n                      {contact.contactDetails[0].name}\n                    </h3>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <div className=\"chatHistoryMessageWrapper\">\n              <h3>No Contacts</h3>\n            </div>\n          )}\n        </SimpleBar>\n      </div>\n      <NotificationContainer />\n    </>\n  );\n};\n\nexport default React.memo(Contacts);\n","import React, { useEffect, useState } from \"react\";\nimport { isAuthenticated } from \"../auth/helper/apicalls\";\nimport SimpleBar from \"simplebar-react\";\nimport USERPIC from \"./images/account.png\";\nimport { searchForContact, addToContact, getChatId } from \"./helper/apicalls\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nconst AddContact = ({ changeSection, section }) => {\n  const { token, user } = isAuthenticated();\n  const [searchVal, setSearchVal] = useState(\"\");\n  const [searchResult, setSearchResult] = useState({});\n  const [indicators, setIndicators] = useState({\n    success: \"\",\n    loading: \"\",\n    error: \"\",\n  });\n  const { loading, success, error } = indicators;\n\n  const [newIndicators, setNewIndicators] = useState({\n    nloading: \"\",\n    nsuccess: \"\",\n    nerror: \"\",\n  });\n\n  const { nloading, nerror, nsuccess } = newIndicators;\n\n  useEffect(() => {\n    if (searchVal.trim() !== \"\") {\n      setIndicators({ ...indicators, loading: true, success: \"\", error: \"\" });\n      searchForContact(token, user._id, searchVal).then((data) => {\n        if (data.error) {\n          setIndicators({\n            ...indicators,\n            loading: false,\n            success: false,\n            error: data.error,\n          });\n        } else {\n          setIndicators({\n            ...indicators,\n            loading: false,\n            success: true,\n            error: \"\",\n          });\n          setSearchResult(data);\n        }\n      });\n    }\n  }, [searchVal]);\n\n  const addContactToList = (contactId) => {\n    if (!nsuccess) {\n      setNewIndicators({\n        ...newIndicators,\n        nloading: true,\n        nsuccess: \"\",\n        nerror: \"\",\n      });\n      addToContact(token, user._id, contactId).then((data) => {\n        if (data.error) {\n          setNewIndicators({\n            ...newIndicators,\n            nloading: false,\n            nsuccess: false,\n            nerror: data.error,\n          });\n          NotificationManager.error(data.error, \"Error\", 5000);\n        } else {\n          setNewIndicators({\n            ...newIndicators,\n            nloading: false,\n            nsuccess: true,\n            nerror: \"\",\n          });\n          NotificationManager.success(\"User Successfuly Added\", \"Alert\", 5000);\n        }\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"title flex bg-gray-100 flex-col\">\n        <h3 className=\"titleText\">Add</h3>\n        <h3 className=\"titleText\">Contact</h3>\n      </div>\n      <div className=\"searchBar\">\n        <input\n          onChange={(e) => {\n            setSearchVal(e.target.value);\n          }}\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"searchBarInput\"\n          value={searchVal}\n        />\n      </div>\n      <div className=\"chatHistoryWrapper \">\n        <SimpleBar style={{ maxHeight: 420 }}>\n          {loading ? (\n            <div className=\"chatHistoryMessageWrapper animate-pulse\">\n              <div className=\"userIcon\">\n                <div className=\"rounded-full bg-blue-400 h-12 w-12\"></div>\n              </div>\n              <div className=\"userData space-y-2\">\n                <div className=\"h-4 bg-blue-400 rounded\"></div>\n                <div className=\"h-4 bg-blue-400 rounded w-5/6\"></div>\n              </div>\n            </div>\n          ) : Object.keys(searchResult).length !== 0 ? (\n            <div className=\"chatHistoryMessageWrapper\">\n              <div className=\"userIcon\">\n                <img src={USERPIC} alt=\"demoPic\" className=\"userPic\" />\n              </div>\n              <div className=\"userData\">\n                <h3 className=\"chatName\">{searchResult.user_name}</h3>\n              </div>\n              <div\n                className=\"addIcon\"\n                onClick={() => {\n                  addContactToList(searchResult.user_id);\n                }}\n              >\n                {nloading ? (\n                  <i className=\"fas fa-yin-yang animate-spin\"></i>\n                ) : nsuccess ? (\n                  <i className=\"fas fa-check-circle\"></i>\n                ) : (\n                  <i className=\"fas fa-plus\"></i>\n                )}\n              </div>\n            </div>\n          ) : searchVal.trim() === \"\" ? (\n            \"\"\n          ) : (\n            <div className=\"chatHistoryMessageWrapper\">\n              <h3>No user found with given email</h3>\n            </div>\n          )}\n        </SimpleBar>\n      </div>\n      <NotificationContainer />\n    </>\n  );\n};\n\nexport default React.memo(AddContact);\n","import React from \"react\";\n\nconst SelectSection = ({ changeSection, section }) => {\n  return (\n    <div className=\"flex justify-center item-center sectionSelectorWrapper\">\n      <div\n        onClick={() => changeSection(\"recent\")}\n        className={\n          section === \"recent\"\n            ? \"flex-1 flex justify-center item-center  sectionTabs active\"\n            : \"flex-1 flex justify-center item-center  sectionTabs\"\n        }\n      >\n        Recent\n      </div>\n      <div\n        onClick={() => changeSection(\"contact\")}\n        className={\n          section === \"contact\"\n            ? \"flex-1 flex justify-center item-center  sectionTabs active\"\n            : \"flex-1 flex justify-center item-center  sectionTabs\"\n        }\n      >\n        Contacts\n      </div>\n      <div\n        onClick={() => changeSection(\"addContact\")}\n        className={\n          section === \"addContact\"\n            ? \"flex-1 flex justify-center item-center  sectionTabs active\"\n            : \"flex-1 flex justify-center item-center  sectionTabs\"\n        }\n      >\n        Add Contact\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(SelectSection);\n","import React from \"react\";\nimport USERPIC from \"./images/account.png\";\n\nconst TopBar = ({ name }) => {\n  return (\n    <div className=\"topBarSection shadow-lg\">\n      <div className=\"topbarImageWrapper\">\n        <img src={USERPIC} alt=\"demoPic\" className=\"topBarImage\" />\n      </div>\n      <div className=\"tapBarName\">{name}</div>\n    </div>\n  );\n};\n\nexport default React.memo(TopBar);\n","import React, { useState, useEffect } from \"react\";\nimport { isAuthenticated } from \"../auth/helper/apicalls\";\n\nconst Messages = ({ messages, loading }) => {\n  const { token, user } = isAuthenticated();\n\n  const [messagesData, setMessagesData] = useState(messages);\n\n  useEffect(() => {\n    setMessagesData(messages);\n  }, [messages]);\n\n  return (\n    <div className=\"messagesSection\">\n      {loading ? (\n        <div className=\"chatLoading\">\n          <i className=\"fas fa-yin-yang animate-spin\"></i>\n        </div>\n      ) : messagesData.length !== 0 ? (\n        messagesData.map((chat, index) => {\n          return chat.sender === user._id ? (\n            <div className=\"messageWrapper sender\" key={index}>\n              <h3 className=\"message\">{chat.message}</h3>\n            </div>\n          ) : (\n            <div className=\"messageWrapper reciver\" key={index}>\n              <h3 className=\"message\">{chat.message}</h3>\n            </div>\n          );\n        })\n      ) : (\n        <div className=\"messageWrapper\">\n          <h3 className=\"noMessages\">No messages available</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Messages;\n","import React, { useEffect, useState } from \"react\";\nimport { isAuthenticated, tryLogOut } from \"../auth/helper/apicalls\";\nimport SimpleBar from \"simplebar-react\";\nimport USERPIC from \"./images/account.png\";\n\nimport {\n  getChatHistory,\n  trySendingMessage,\n  getAllMessages,\n} from \"./helper/apicalls\";\n\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport ChatHistory from \"./ChatHistory\";\nimport Contacts from \"./Contacts\";\nimport AddContact from \"./AddContact\";\nimport SelectSection from \"./SelectSection\";\nimport TopBar from \"./TopBar\";\nimport Messages from \"./Messages\";\nimport { socket, SocketContext } from \"./helper/socket\";\n\nconst Base = ({ history }) => {\n  const { token, user } = isAuthenticated();\n\n  const [chatView, setChatView] = useState(false);\n\n  const [section, setSection] = useState(\"recent\");\n\n  const [messages, setMessages] = useState([]);\n\n  const [chatData, setChatData] = useState({\n    reciverName: \"\",\n    reciver: \"\",\n    chatId: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [messageData, setMessageData] = useState({\n    sender: \"\",\n    reciver: \"\",\n    chatId: \"\",\n    message: \"\",\n  });\n\n  const logout = () => {\n    if (window.confirm(\"Are you Sure You want to logout.\")) {\n      tryLogOut(() => {\n        history.push(\"/\");\n      });\n    }\n  };\n\n  const setMessgeInfo = (reciverId, reciverName, chatId) => {\n    setChatData({\n      ...chatData,\n      reciver: reciverId,\n      chatId: chatId,\n      reciverName: reciverName,\n    });\n    setMessageData({\n      ...messageData,\n      reciver: reciverId,\n      chatId: chatId,\n      sender: user._id,\n    });\n    setChatView(true);\n  };\n\n  const changeMessage = (e) => {\n    setMessageData({ ...messageData, message: e.target.value });\n  };\n\n  const changeSection = (sectionName) => {\n    setSection(sectionName);\n  };\n\n  const sendingMessage = (e) => {\n    e.preventDefault();\n    socket.emit(\"sendMessage\", messageData, (error) => {\n      if (error) {\n        NotificationManager.error(error, \"Error\", 10000);\n        return;\n      }\n    });\n    setMessageData({ ...messageData, message: \"\" });\n  };\n\n  const getLeftSideView = () => {\n    switch (section) {\n      case \"recent\":\n        return <ChatHistory setMessgeInfo={setMessgeInfo} />;\n      case \"contact\":\n        return <Contacts setMessgeInfo={setMessgeInfo} />;\n      case \"addContact\":\n        return <AddContact />;\n      default:\n        return <ChatHistory setMessgeInfo={setMessgeInfo} />;\n    }\n  };\n\n  useEffect(() => {\n    if (chatData.chatId) {\n      setLoading(true);\n      getAllMessages(token, chatData.chatId, user._id).then((data) => {\n        if (data.error) {\n          setLoading(false);\n          NotificationManager.error(data.error, \"Error\", 10000);\n        } else {\n          setMessages(data);\n          setLoading(false);\n        }\n      });\n    }\n  }, [chatData]);\n\n  useEffect(() => {\n    socket.on(\"message\", (message) => {\n      setMessages([message, ...messages]);\n    });\n  }, [messages]);\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <div className=\"flex flex-col justify-center items-center chatPage\">\n        <div className=\"headerSection flex justify-center items-center\">\n          <div className=\"flex-1 flex justify-center pb-4 items-center text-2xl\">\n            <i className=\"fas fa-comment-alt iconMain\"></i>\n            <h3 className=\"pl-3 headingMain\">WeMessage</h3>\n          </div>\n          <div className=\"flex-1 flex justify-center pb-4 items-center\">\n            <button className=\"logoutButton shadow-xl\" onClick={logout}>\n              Logout\n            </button>\n          </div>\n        </div>\n        <div className=\"chatWrapper rounded\">\n          <div className=\"chathistory shadow-xl\">\n            <SelectSection changeSection={changeSection} section={section} />\n            {getLeftSideView()}\n          </div>\n\n          <div className=\"chats\">\n            {chatView ? (\n              <>\n                <div className=\"chatTopBar\">\n                  <TopBar name={chatData.reciverName} />\n                </div>\n                <div className=\"chatMessages\">\n                  <Messages messages={messages} loading={loading} />\n                </div>\n                <div className=\"messageInputSection\">\n                  <div className=\"messageInputWrapper\">\n                    <textarea\n                      placeholder=\"Type Message\"\n                      className=\"messageInput\"\n                      value={messageData.message}\n                      onChange={changeMessage}\n                    ></textarea>\n                  </div>\n                  <div className=\"messageSendButtonWrapper\">\n                    <button\n                      className=\"messageSendButton shadow-xl\"\n                      onClick={sendingMessage}\n                    >\n                      <i className=\"far fa-paper-plane\"></i>\n                    </button>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <div className=\"noChatSelected\">\n                <div className=\"iconAndTitleContainer\">\n                  <div className=\"emptyBoxIcon\">\n                    <i className=\"fas fa-inbox\"></i>\n                  </div>\n                  <div className=\"noChatSelectedText\">No chat Selected</div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n        <NotificationContainer />\n      </div>\n    </SocketContext.Provider>\n  );\n};\n\nexport default Base;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nimport { authenticate, isAuthenticated, tryLogIn } from \"./helper/apicalls\";\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = user;\n\n  const [indicators, setIndicators] = useState({\n    success: \"\",\n    loading: \"\",\n    error: \"\",\n  });\n  const { loading, error, success } = indicators;\n\n  const changeHandler = (field) => (e) => {\n    e.preventDefault();\n    setUser({ ...user, [field]: e.target.value });\n  };\n\n  const performRedirect = () => {\n    if (success) {\n      return <Redirect to=\"/user/chat\" />;\n    }\n    if (isAuthenticated()) {\n      return <Redirect to=\"/user/chat\" />;\n    }\n  };\n\n  const submitData = (e) => {\n    e.preventDefault();\n    if (email.trim() === \"\" || password.trim() === \"\") {\n      NotificationManager.warning(\n        \"Please fill all the fields\",\n        \"Blank Fields\",\n        10000,\n        () => {},\n        true\n      );\n    } else {\n      setIndicators({ ...indicators, loading: true, success: \"\", error: \"\" });\n      tryLogIn(user).then((data) => {\n        console.log(data);\n        if (data.error) {\n          setIndicators({ ...indicators, loading: false, error: data.error });\n          if (typeof data.error === \"object\") {\n            data.error.errors.map((err) => {\n              NotificationManager.error(err.msg, \"Error\", 10000);\n            });\n          } else {\n            NotificationManager.error(data.error, \"Error\", 10000);\n          }\n        } else {\n          authenticate(data, () => {\n            setIndicators({ ...indicators, success: true });\n          });\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col flex-1 formContainer formHeight \">\n      {performRedirect()}\n      <div className=\"flex  justify-center items-center\">\n        <h4 className=\" font-bold text-3xl py-5 px-3 sectionHeading \">Login</h4>\n      </div>\n      <form className=\"  flex flex-col justify-center items-center mt-7 \">\n        <input\n          type=\"text\"\n          className=\"mb-3 border-0 h-10 rounded  px-3  font-roboto text-md outline-none inputBackground \"\n          placeholder=\"Email\"\n          value={email}\n          onChange={changeHandler(\"email\")}\n        />\n        <input\n          type=\"password\"\n          className=\" mb-3 border-0 h-10 rounded  px-3  font-roboto text-md outline-none inputBackground \"\n          placeholder=\"Password\"\n          value={password}\n          onChange={changeHandler(\"password\")}\n        />\n        <button\n          className=\"py-2 px-5 bg-blue-500 text-white font-bold rounded\"\n          onClick={submitData}\n        >\n          Login\n        </button>\n      </form>\n      <NotificationContainer />\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport { trySignUp } from \"./helper/apicalls\";\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const { name, email, password } = user;\n\n  const [indicators, setIndicators] = useState({\n    success: \"\",\n    loading: \"\",\n    error: \"\",\n  });\n\n  const { loading, error, success } = indicators;\n\n  const changeHandler = (field) => (e) => {\n    e.preventDefault();\n    setUser({ ...user, [field]: e.target.value });\n  };\n  const submitform = (e) => {\n    e.preventDefault();\n    if (name.trim() === \"\" || email.trim() === \"\" || password.trim() === \"\") {\n      NotificationManager.warning(\n        \"Please fill all the fields\",\n        \"Blank Fields\",\n        10000,\n        () => {},\n        true\n      );\n    } else {\n      setIndicators({ ...indicators, loading: true, success: \"\", error: \"\" });\n      trySignUp(user).then((data) => {\n        if (data.error) {\n          setIndicators({ ...indicators, loading: false, error: data.error });\n          if (typeof data.error === \"object\") {\n            data.error.errors.map((err) => {\n              NotificationManager.error(err.msg, \"Error\", 10000);\n            });\n          } else {\n            NotificationManager.error(data.error, \"Error\", 10000);\n          }\n        } else {\n          console.log(data);\n          setIndicators({\n            ...indicators,\n            loading: false,\n            error: \"\",\n            success: true,\n          });\n          setUser({ ...user, name: \"\", email: \"\", password: \"\" });\n          NotificationManager.success(\n            \"Please login with your email id and password\",\n            \"Successfully Registered\"\n          );\n        }\n      });\n    }\n  };\n  return (\n    <div className=\"flex flex-col flex-1  formContainer formHeight \">\n      <div className=\"flex  justify-center items-center\">\n        <h4 className=\" font-bold text-3xl py-5 px-3 sectionHeading\">\n          Sign-up\n        </h4>\n      </div>\n      <form className=\" flex flex-col justify-center items-center  \">\n        <input\n          type=\"text\"\n          className=\"inputBackground mb-3 border-0 h-10 rounded  px-3  font-roboto text-md outline-none \"\n          placeholder=\"Name\"\n          value={name}\n          onChange={changeHandler(\"name\")}\n        />\n        <input\n          type=\"text\"\n          className=\" inputBackground mb-3 border-0 h-10 rounded  px-3  font-roboto text-md outline-none \"\n          placeholder=\"Email\"\n          value={email}\n          onChange={changeHandler(\"email\")}\n        />\n        <input\n          type=\"password\"\n          className=\"inputBackground mb-3 border-0 h-10 rounded  px-3  font-roboto text-md outline-none \"\n          placeholder=\"Password\"\n          value={password}\n          onChange={changeHandler(\"password\")}\n        />\n        <button\n          onClick={submitform}\n          className=\"py-2 px-5 bg-blue-500  text-white font-bold rounded\"\n        >\n          {loading ? \"Please Wait\" : \"Register\"}\n        </button>\n      </form>\n      <NotificationContainer />\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport Login from \"../auth/Login\";\nimport Signup from \"../auth/Signup\";\n\nconst Main = () => {\n  return (\n    <div className=\" justify-center  items-center  flex  flex-col mainHeight \">\n      <div className=\"flex justify-center items-center  heading text-5xl\">\n        <i className=\"fas fa-comment-alt iconMain\"></i>\n        <h3 className=\"pl-3 headingMain\">WeMessage</h3>\n      </div>\n      <div className=\"flex  mainContent\">\n        <div className=\"flex-1 flex wrapper borderRight\">\n          <Login />\n        </div>\n        <div className=\"flex-1 flex wrapper  borderLeft\">\n          <Signup />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/auth/helper/ProtectedRoutes\";\nimport Base from \"./components/chat/Base\";\nimport Main from \"./components/entryPage/Main\";\nimport { socket, SocketContext } from \"./components/chat/helper/socket\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <ProtectedRoute path=\"/user/chat\" component={Base} />\n        <Base />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Router from \"./Router\";\nimport \"./index.css\";\nimport \"react-notifications/lib/notifications.css\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport \"./custom.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}